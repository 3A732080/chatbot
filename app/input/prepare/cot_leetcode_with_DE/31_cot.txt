---
Example of question thirty-one
---
Table: Logs
+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| num         | varchar |
+-------------+---------+
In SQL, id is the primary key for this table.
id is an autoincrement column.

Find all numbers that appear at least three times consecutively.

Return the result table in any order.

The result format is in the following example.

Example 1:

Input:
Logs table:
+----+-----+
| id | num |
+----+-----+
| 1  | 1   |
| 2  | 1   |
| 3  | 1   |
| 4  | 2   |
| 5  | 1   |
| 6  | 2   |
| 7  | 2   |
+----+-----+
Output:
+-----------------+
| ConsecutiveNums |
+-----------------+
| 1               |
+-----------------+
Explanation: 1 is the only number that appears consecutively for at least three times.

---
output
---
{
  "reasoning_process" : "The goal is to find numbers that appear at least three times in a row in the "Logs" table. Check whether each number is the same as the number before and after it by using CTE or subquery and the LEAD and LAG window functions. In CTE, conditional judgment is performed to select those numbers that satisfy that the current number is equal to the previous number and equal to the next number.",
  "sql": "WITH CTE AS (SELECT num, LEAD(num)over(order by id) as NextNum, LAG(num)over(order by id) as PrevNum FROM Logs ) SELECT distinct num as ConsecutiveNums FROM CTE WHERE num = NextNum and NextNum = PrevNum;"
}

---

Please keep in mind the reasoning process for solving the problem, I will provide the next sample question later...

---
