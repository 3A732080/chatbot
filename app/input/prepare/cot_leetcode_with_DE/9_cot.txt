
---
Example of question nine
---
Table: Weather
+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the column with unique values for this table.
There are no different rows with the same recordDate.
This table contains information about the temperature on a certain day.

Write a solution to find all dates' Id with higher temperatures compared to its previous dates (yesterday).

Return the result table in any order.

The result format is in the following example.

Example 1:

Input:
Weather table:
+----+------------+-------------+
| id | recordDate | temperature |
+----+------------+-------------+
| 1  | 2015-01-01 | 10          |
| 2  | 2015-01-02 | 25          |
| 3  | 2015-01-03 | 20          |
| 4  | 2015-01-04 | 30          |
+----+------------+-------------+
Output:
+----+
| id |
+----+
| 2  |
| 4  |
+----+
Explanation:
In 2015-01-02, the temperature was higher than the previous day (10 -> 25).
In 2015-01-04, the temperature was higher than the previous day (20 -> 30).

---
output
---
{
  "reasoning_process" : "Looks for date IDs with higher temperatures than the previous day. Compare the temperatures of two consecutive days through a self-join of the weather table, making sure the join represents consecutive dates and selecting the record with a higher temperature than the previous day.",
  "sql": "SELECT w2.id FROM Weather w1 JOIN Weather w2 ON DATEDIFF(day,w1.recordDate, w2.recordDate) = 1 WHERE w2.temperature > w1.temperature;"
}

---

Please keep in mind the reasoning process for solving the problem, I will provide the next sample question later...

---